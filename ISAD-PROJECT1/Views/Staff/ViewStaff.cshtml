@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Supplier";

}

@*DataTables CSS*@
<link href="https://cdn.datatables.net/1.10.24/css/dataTables.bootstrap4.min.css" rel="stylesheet">
@*DataTables JS*@
<script src="https://cdn.datatables.net/1.10.24/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.24/js/dataTables.bootstrap4.min.js"></script>

<style>

    .table-responsive {
        white-space: nowrap;
        overflow-x: auto;
    }

    table.table-sm th {
        font-size: 11px;
    }

    table.table-sm td {
        font-size: 12px;
        text-align: center;
    }
</style>

<div class="container mt-5">
    <div class="row">
        <div class="col-12">
           
            <div class="d-sm-flex align-items-center justify-content-between mb-4">
                <div class="mb-0 text-gray-800"> <img src="~/assets/icon/staff.png" style="width:25px; height:25px; margin-bottom:5px;" /> <span style="color:grey">Staff</span></div>
                <a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm text-light" id="btnAddNewStaff" data-target="#idFormStaff" data-toggle="modal">
                    <i class="fa-solid fa-user-plus fa-sm text-white-50"></i> New Staff 
                </a>
            </div>
        </div>
    </div>

    <div class="card" style="border-radius:10px;">
        <div class="card-header">
            <div class="d-flex">
                <div> Search By Staff Name : </div>
                <div style="margin-left:10px;"><select id="ddlNameStaff" style="width:200px; padding:2px; border-radius:6px;"></select></div>
                <div><button class="btn btn-sm btn-success" id="btnClear" style="margin-left:5px; border-radius:5px;">Clear</button></div>
            </div>
        </div>

        <div class="card-body">
            <div class="row">
                <div class="table-responsive">
                    <div class="row">
                        <div class="col-sm-12">
                            <table id="idStaffView" class="table table-bordered table-striped table-sm table-hover" style="width:100%;">
                                <thead class="text-center">
                                    <tr>
                                        <th>No</th>
                                        <th>FULLNAME</th>
                                        <th>GENDER</th>
                                        <th>DATE OF BIRTH</th>
                                        <th>POSITION</th>
                                        <th>SALARY</th>
                                        <th>Status</th>
                                        <th>ACTION</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

        </div>

    </div>


    @*----------------------------------------------------------Create Insert PopUp Form----------------------------------------------------------*@
    <div class="modal fade" id="idFormStaff" tabindex="-1" role="dialog" data-backdrop="static">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"><span><img src="~/assets/icon/staff.png" style="width:30px; height:30px;" /></span><span class="txtTitle" style="margin-left:10px;">Create Staff</span></h5>
                    <button type="button" class="close" id="btnClose" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form class="need-novalidate-new" novalidate>
                        <div class="row">
                            <div class="col-sm-12">
                                <div>
                                    Full Name
                                    <input id="txtFullName" type="text" class="form-control" required />
                                    <div class="invalid-feedback">The fullname filed is required</div>
                                </div>
                                <div style="margin-top:10px;">
                                    Gender
                                    <select class="form-control" id="ddlGender">
                                        <option value="Male" selected>Male</option>
                                        <option value="Female">Female</option>
                                    </select>
                                    <div class="invalid-feedback">The gender field is required</div>
                                </div>
                                <div style="margin-top:10px;">
                                    Date Of Birth
                                    <input id="txtDateOfBirth" type="date" class="form-control" required />
                                    <div class="invalid-feedback">The date of birth field is required</div>
                                </div>
                                <div style="margin-top:10px;">
                                    Position
                                    <input id="txtPosition" type="text" class="form-control" required />
                                    <div class="invalid-feedback">The position field is required</div>
                                </div>
                                <div style="margin-top:10px;">
                                    Salary
                                    <input id="txtSalary" type="number" class="form-control" required />
                                    <div class="invalid-feedback">The salary field is required</div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" id="btnSave" class="btn btn-primary">Save</button>
                            <button type="button" id="btnCloseModal" class="btn btn-secondary" data-dismiss="modal">Close</button>

                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    @*----------------------------------------------------------Create Insert PopUp Form----------------------------------------------------------*@


    <div class="modal fade" id="idFormStaffUpdate" tabindex="-1" role="dialog" data-backdrop="static">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"><span><img src="~/assets/icon/staff.png" style="width:30px; height:30px;" /></span><span class="txtTitle" style="margin-left:10px;">Update Supplier</span></h5>
                    <button type="button" class="close" id="btnClose" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form class="need-novalidate-new-update" novalidate>
                        <div class="row">
                            <div class="col-sm-12">
                                <div>
                                    Full Name
                                    <input id="txtFullNameUpdate" type="text" class="form-control" required />
                                    <div class="invalid-feedback">The fullname filed is required</div>
                                </div>
                                <div style="margin-top:10px;">
                                    Gender
                                    <select class="form-control" id="ddlGenderUpdate">
                                        <option value="Male">Male</option>
                                        <option value="Female">Female</option>
                                    </select>
                                    <div class="invalid-feedback">The gender field is required</div>
                                </div>
                                <div style="margin-top:10px;">
                                    Date Of Birth
                                    <input id="txtDateOfBirthUpdate" type="date" class="form-control" required />
                                    <div class="invalid-feedback">The date of birth field is required</div>
                                </div>
                                <div style="margin-top:10px;">
                                    Position
                                    <input id="txtPositionUpdate" type="text" class="form-control" required />
                                    <div class="invalid-feedback">The position field is required</div>
                                </div>
                                <div style="margin-top:10px;">
                                    Salary
                                    <input id="txtSalaryUpdate" type="number" class="form-control" required />
                                    <div class="invalid-feedback">The salary field is required</div>
                                </div>
                                <div style="margin-top:10px;">
                                    Status
                                    <select class="form-control" id="ddlStatusWork">
                                        <option value="1">Working</option>
                                        <option value="0">Stopwork</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" id="btnUpdate" class="btn btn-primary">Update</button>
                            <button type="button" id="btnCloseModal" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

</div>



<script type="text/javascript">

    $(document).ready(function () {

    })

 


    //$("#btnAddNewStaff").click(function () {
    //    $("#idFormStaff").modal("show");
    //});
    //$("#btnCloseModal").click(function () {
    //    $("#idFormStaff").modal("hide");
    //})
    //$("#btnClose").click(function () {
    //    $("#idFormStaff").modal("hide");
    //})


    //$("#btnCloseModalUpdate").click(function () {
    //    $("#idFormStaff").modal("hide");
    //})
    //$("#btnCloseUpdate").click(function () {
    //    $("#idFormStaff").modal("hide");
    //})

    //GET DATA
    $('#idStaffView').DataTable({
        data: staffData, // Assuming staffData is your actual data
        columns: [
            {
                render: function (data, type, full, meta) {
                    return meta.row + 1;
                }
            },
            { data: "fullName" },
            { data: "gender" },
            { data: "dateOfBirthStr" },
            { data: "position" },
            { data: "salary" },
            {
                data: "status",
                render: function (data, type, full, meta) {
                    var colorClass = "";
                    if (data == "Working") {
                        colorClass = "badge-success";
                    } else {
                        colorClass = "badge-danger";
                    }
                    return '<span style="padding:3px;" class="badge ' + colorClass + '">' + data + '</span>';
                }
            },
            {
                render: function (data, type, full, meta) {
                    return '<a href="#" style="margin-right: 10px; color:#ff4d4d; font-size:14px;" onclick="remove(' + full.id + ')"><i class="fas fa-trash"></i></a>' + '<a style="font-size:14px;" href="#" onclick="edit(' + full.id + ')"><i class="fa-regular fa-pen-to-square"></i></a>'
                }
            }
        ]
    });

    var table = $('#idStaffView').DataTable();
    var staffData = [];
    function getData(staffName = '') {
        // showLoading();
        $.ajax({
            url: '@Url.Action("GetStaff","Staff")',
            type: "GET",
            dataType: "JSON",
            data: staffName ? { staffName: staffName } : {}, // Pass the supplierName as a parameter if it's not empty
            success: function (response) {
                if (response.errCode == 0) {
                    console.log(response);
                    // hideLoading();
                    staffData = [];
                    staffData = response.staffs;

                    table.clear();
                    table.rows.add(staffData);
                    table.draw();
                } else {

                }
            }
        });
    }
    getData();


    // Hold screen to validation
    var form = document.getElementsByClassName('need-novalidate-new');
    var validation = Array.prototype.filter.call(form, function (forms) {
        forms.addEventListener('submit', function (event) {
            if (forms.checkValidity() == false) {
                event.preventDefault();
            }
            else {
                event.preventDefault();

                // Check which button triggered the form submission
                var submitButtonId = event.submitter.id;
                if (submitButtonId === 'btnSave') {
                    var obj = {};
                    obj.FullName = $('#txtFullName').val();
                    obj.Gender = $('#ddlGender').val();
                    obj.DateOfBirthStr = $('#txtDateOfBirth').val();
                    obj.Position = $('#txtPosition').val();
                    obj.Salary = $('#txtSalary').val();
                    console.log("Hello: " + JSON.stringify(obj));

                    $('#idFormStaff').modal('hide');

                    $.ajax({
                        url: '@Url.Action("PostStaff","Staff")',
                        type: "POST",
                        dataType: "JSON",//OK
                        data: { objStaff: obj },
                        success: function (response) {
                            if (response.errCode == 0) {

                                Toast.fire({
                                    icon: 'success',
                                    title: response.errMsg
                                })
                                getData();

                                // Reset the form
                                forms.reset();
                                forms.classList.remove('was-validated');

                            }
                            else if (response.errCode == 1) {
                                Toast.fire({
                                    icon: 'error',
                                    title: response.errMsg
                                })
                            }
                            else {
                                Toast.fire({
                                    icon: 'error',
                                    title: response.errMsg
                                })
                            }
                        },
                    });

                }




            }
            forms.classList.add('was-validated');
        }, false);
    });

    function remove(ID) {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("DeleteStaff","Staff")',
                    type: "GET",
                    dataType: "JSON",
                    data: { staffId: ID },
                    success: function (response) {
                        if (response.errCode == 0) {
                            Swal.fire({
                                title: "Deleted!",
                                text: "Your file has been deleted.",
                                icon: "success"
                            });
                            getData();
                        }
                        else {

                        }

                    }
                });

            }
        });
    }

    var valueStaffId = null;
    function edit(staffId) {
        $("#idFormStaffUpdate").modal("show");
        valueStaffId = staffId;
        $.ajax({
            url: '@Url.Action("GetStaffById","Staff")',
            type: "POST",
            dataType: "JSON",//OK
            data: { StaffId: valueStaffId },
            success: function (response) {
                if (response.errCode == 0) {
                    console.log(response);
                    $('#txtFullNameUpdate').val(response.staffs[0].fullName);
                    $('#ddlGenderUpdate').val(response.staffs[0].gender);
                    $('#txtDateOfBirthUpdate').val(response.staffs[0].dateOfBirthStr);
                    $('#txtPositionUpdate').val(response.staffs[0].position);
                    $('#txtSalaryUpdate').val(response.staffs[0].salary);
                    $('#dllStatusWork').val(response.staffs[0].status);
                    if (response.staffs[0].status.trim() == "Stopwork"){
                        $('#ddlStatusWork').val("0");
                    }else{
                        $('#ddlStatusWork').val("1");
                    }
                }
                else {
                    Toast.fire({
                        icon: 'error',
                        title: response.errMsg
                    })
                }
            },
        });

    }

    var valueStatusWork;
    $('#ddlStatusWork').change(function () {
        var selectOptionValue = $(this).val();
        valueStatusWork = selectOptionValue;
        alert(valueStatusWork);
    })



    // Hold screen to validation
    var form = document.getElementsByClassName('need-novalidate-new-update');
    var validation = Array.prototype.filter.call(form, function (forms) {
        forms.addEventListener('submit', function (event) {
            if (forms.checkValidity() == false) {
                event.preventDefault();
            }
            else {
                event.preventDefault();

                // Check which button triggered the form submission
                var submitButtonId = event.submitter.id;
                if (submitButtonId === 'btnUpdate') {
                    var obj = {};
                    obj.Id = valueStaffId;
                    obj.FullName = $('#txtFullNameUpdate').val();
                    obj.Gender = $('#ddlGenderUpdate').val();
                    obj.DateOfBirthStr = $('#txtDateOfBirthUpdate').val();
                    obj.Position = $('#txtPositionUpdate').val();
                    obj.Salary = $('#txtSalaryUpdate').val();
                    obj.Stopwork = valueStatusWork;

                    $('#idFormStaffUpdate').modal('hide');

                    $.ajax({
                        url: '@Url.Action("UpdateStaff","Staff")',
                        type: "POST",
                        dataType: "JSON",//OK
                        data: { objStaff: obj },
                        success: function (response) {
                            if (response.errCode == 0) {
                                Toast.fire({
                                    icon: 'success',
                                    title: response.errMsg
                                })
                                getData();
                                getAllNameSupplier();
                                // Reset the form
                                forms.reset();
                                forms.classList.remove('was-validated');
                            }
                            else {
                                Toast.fire({
                                    icon: 'error',
                                    title: response.errMsg
                                })
                            }
                        },
                    });

                }
            }
            forms.classList.add('was-validated');
        }, false);
    });

    function getAllNameStaff() {
        $.ajax({
            url: '@Url.Action("GetStaff", "Staff")',
            type: "GET",
            dataType: "JSON",
            success: function (response) {
                //console.log(response);
                var ddlNameStaff = $('#ddlNameStaff');
                ddlNameStaff.empty();

                var defaultOption = new Option('----- Choose One ------', '');
                defaultOption.disabled = true; // Disable the default option
                defaultOption.selected = true; // Select the default option
                ddlNameStaff.append(defaultOption);

                for (var i = 0; i < response.staffs.length; i++) {
                    var staffData = response.staffs[i];
                    var optionValue = staffData.fullName;
                    var optionText = staffData.fullName;
                    var option = new Option(optionText, optionValue);
                    ddlNameStaff.append(option);
                }
                ddlNameStaff.val('');
            }
        });
    }

    getAllNameStaff();


    //get value typeOfBook
    var valueStaffName;
    $("#ddlNameStaff").change(function () {
        var selectOptionValue = $(this).val();
        valueStaffName = selectOptionValue;
        //alert(valueSupplierName);
        getData(valueStaffName);

    });

    $("#btnClear").click(function(){
        getData();
        $("#ddlNameStaff").val("");
    })

</script>



